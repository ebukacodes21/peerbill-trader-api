// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: trader.sql

package db

import (
	"context"
)

const createTrader = `-- name: CreateTrader :one
INSERT INTO traders (
  first_name, last_name, username, password, email, country, phone
) VALUES (
  $1, $2, $3, $4, $5, $6, $7
)
RETURNING id, first_name, last_name, username, password, email, country, phone, role, profile_pic, created_at
`

type CreateTraderParams struct {
	FirstName string `db:"first_name" json:"first_name"`
	LastName  string `db:"last_name" json:"last_name"`
	Username  string `db:"username" json:"username"`
	Password  string `db:"password" json:"password"`
	Email     string `db:"email" json:"email"`
	Country   string `db:"country" json:"country"`
	Phone     string `db:"phone" json:"phone"`
}

func (q *Queries) CreateTrader(ctx context.Context, arg CreateTraderParams) (Trader, error) {
	row := q.db.QueryRowContext(ctx, createTrader,
		arg.FirstName,
		arg.LastName,
		arg.Username,
		arg.Password,
		arg.Email,
		arg.Country,
		arg.Phone,
	)
	var i Trader
	err := row.Scan(
		&i.ID,
		&i.FirstName,
		&i.LastName,
		&i.Username,
		&i.Password,
		&i.Email,
		&i.Country,
		&i.Phone,
		&i.Role,
		&i.ProfilePic,
		&i.CreatedAt,
	)
	return i, err
}
