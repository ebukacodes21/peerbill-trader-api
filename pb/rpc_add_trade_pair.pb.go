// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: rpc_add_trade_pair.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddTradePairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string  `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Crypto   string  `protobuf:"bytes,2,opt,name=crypto,proto3" json:"crypto,omitempty"`
	Fiat     string  `protobuf:"bytes,3,opt,name=fiat,proto3" json:"fiat,omitempty"`
	BuyRate  float32 `protobuf:"fixed32,4,opt,name=buy_rate,json=buyRate,proto3" json:"buy_rate,omitempty"`
	SellRate float32 `protobuf:"fixed32,5,opt,name=sell_rate,json=sellRate,proto3" json:"sell_rate,omitempty"`
}

func (x *AddTradePairRequest) Reset() {
	*x = AddTradePairRequest{}
	mi := &file_rpc_add_trade_pair_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTradePairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTradePairRequest) ProtoMessage() {}

func (x *AddTradePairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_add_trade_pair_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTradePairRequest.ProtoReflect.Descriptor instead.
func (*AddTradePairRequest) Descriptor() ([]byte, []int) {
	return file_rpc_add_trade_pair_proto_rawDescGZIP(), []int{0}
}

func (x *AddTradePairRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddTradePairRequest) GetCrypto() string {
	if x != nil {
		return x.Crypto
	}
	return ""
}

func (x *AddTradePairRequest) GetFiat() string {
	if x != nil {
		return x.Fiat
	}
	return ""
}

func (x *AddTradePairRequest) GetBuyRate() float32 {
	if x != nil {
		return x.BuyRate
	}
	return 0
}

func (x *AddTradePairRequest) GetSellRate() float32 {
	if x != nil {
		return x.SellRate
	}
	return 0
}

type AddTradePairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradePairs []*TraderPair `protobuf:"bytes,1,rep,name=tradePairs,proto3" json:"tradePairs,omitempty"`
}

func (x *AddTradePairResponse) Reset() {
	*x = AddTradePairResponse{}
	mi := &file_rpc_add_trade_pair_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTradePairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTradePairResponse) ProtoMessage() {}

func (x *AddTradePairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_add_trade_pair_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTradePairResponse.ProtoReflect.Descriptor instead.
func (*AddTradePairResponse) Descriptor() ([]byte, []int) {
	return file_rpc_add_trade_pair_proto_rawDescGZIP(), []int{1}
}

func (x *AddTradePairResponse) GetTradePairs() []*TraderPair {
	if x != nil {
		return x.TradePairs
	}
	return nil
}

var File_rpc_add_trade_pair_proto protoreflect.FileDescriptor

var file_rpc_add_trade_pair_proto_rawDesc = []byte{
	0x0a, 0x18, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x70, 0x61, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x10,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x95, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x61, 0x69,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x69, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x61, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x62, 0x75, 0x79, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x6c, 0x6c, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x73, 0x65, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x22, 0x46, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x50, 0x61, 0x69, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x69, 0x72, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x50, 0x61, 0x69, 0x72, 0x73,
	0x42, 0x18, 0x5a, 0x16, 0x70, 0x65, 0x65, 0x72, 0x62, 0x69, 0x6c, 0x6c, 0x2d, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_rpc_add_trade_pair_proto_rawDescOnce sync.Once
	file_rpc_add_trade_pair_proto_rawDescData = file_rpc_add_trade_pair_proto_rawDesc
)

func file_rpc_add_trade_pair_proto_rawDescGZIP() []byte {
	file_rpc_add_trade_pair_proto_rawDescOnce.Do(func() {
		file_rpc_add_trade_pair_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_add_trade_pair_proto_rawDescData)
	})
	return file_rpc_add_trade_pair_proto_rawDescData
}

var file_rpc_add_trade_pair_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_rpc_add_trade_pair_proto_goTypes = []any{
	(*AddTradePairRequest)(nil),  // 0: pb.AddTradePairRequest
	(*AddTradePairResponse)(nil), // 1: pb.AddTradePairResponse
	(*TraderPair)(nil),           // 2: pb.TraderPair
}
var file_rpc_add_trade_pair_proto_depIdxs = []int32{
	2, // 0: pb.AddTradePairResponse.tradePairs:type_name -> pb.TraderPair
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_rpc_add_trade_pair_proto_init() }
func file_rpc_add_trade_pair_proto_init() {
	if File_rpc_add_trade_pair_proto != nil {
		return
	}
	file_trade_pair_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_add_trade_pair_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_add_trade_pair_proto_goTypes,
		DependencyIndexes: file_rpc_add_trade_pair_proto_depIdxs,
		MessageInfos:      file_rpc_add_trade_pair_proto_msgTypes,
	}.Build()
	File_rpc_add_trade_pair_proto = out.File
	file_rpc_add_trade_pair_proto_rawDesc = nil
	file_rpc_add_trade_pair_proto_goTypes = nil
	file_rpc_add_trade_pair_proto_depIdxs = nil
}
